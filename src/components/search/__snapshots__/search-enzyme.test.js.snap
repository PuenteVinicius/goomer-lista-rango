// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render the homepage 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(Search)
    initialValue="Seu nome aqui"
  >
    <Search
      changeValue={[Function]}
      initialValue="Seu nome aqui"
      value="Seu nome aqui"
    >
      <div>
        <label>
          Seu nome aqui
        </label>
        <br />
        <WithStyles(ForwardRef(Paper))>
          <ForwardRef(Paper)
            classes={
              Object {
                "elevation0": "MuiPaper-elevation0",
                "elevation1": "MuiPaper-elevation1",
                "elevation10": "MuiPaper-elevation10",
                "elevation11": "MuiPaper-elevation11",
                "elevation12": "MuiPaper-elevation12",
                "elevation13": "MuiPaper-elevation13",
                "elevation14": "MuiPaper-elevation14",
                "elevation15": "MuiPaper-elevation15",
                "elevation16": "MuiPaper-elevation16",
                "elevation17": "MuiPaper-elevation17",
                "elevation18": "MuiPaper-elevation18",
                "elevation19": "MuiPaper-elevation19",
                "elevation2": "MuiPaper-elevation2",
                "elevation20": "MuiPaper-elevation20",
                "elevation21": "MuiPaper-elevation21",
                "elevation22": "MuiPaper-elevation22",
                "elevation23": "MuiPaper-elevation23",
                "elevation24": "MuiPaper-elevation24",
                "elevation3": "MuiPaper-elevation3",
                "elevation4": "MuiPaper-elevation4",
                "elevation5": "MuiPaper-elevation5",
                "elevation6": "MuiPaper-elevation6",
                "elevation7": "MuiPaper-elevation7",
                "elevation8": "MuiPaper-elevation8",
                "elevation9": "MuiPaper-elevation9",
                "root": "MuiPaper-root",
                "rounded": "MuiPaper-rounded",
              }
            }
          >
            <div
              className="MuiPaper-root MuiPaper-elevation1 MuiPaper-rounded"
            >
              <WithStyles(ForwardRef(Divider))>
                <ForwardRef(Divider)
                  classes={
                    Object {
                      "absolute": "MuiDivider-absolute",
                      "inset": "MuiDivider-inset",
                      "light": "MuiDivider-light",
                      "middle": "MuiDivider-middle",
                      "root": "MuiDivider-root",
                    }
                  }
                >
                  <hr
                    className="MuiDivider-root"
                  />
                </ForwardRef(Divider)>
              </WithStyles(ForwardRef(Divider))>
              <WithStyles(ForwardRef(InputBase))
                onChange={[Function]}
                value="Seu nome aqui"
              >
                <ForwardRef(InputBase)
                  classes={
                    Object {
                      "adornedEnd": "MuiInputBase-adornedEnd",
                      "adornedStart": "MuiInputBase-adornedStart",
                      "disabled": "Mui-disabled",
                      "error": "Mui-error",
                      "focused": "Mui-focused",
                      "formControl": "MuiInputBase-formControl",
                      "fullWidth": "MuiInputBase-fullWidth",
                      "input": "MuiInputBase-input",
                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                      "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                      "inputMarginDense": "MuiInputBase-inputMarginDense",
                      "inputMultiline": "MuiInputBase-inputMultiline",
                      "inputSelect": "MuiInputBase-inputSelect",
                      "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                      "marginDense": "MuiInputBase-marginDense",
                      "multiline": "MuiInputBase-multiline",
                      "root": "MuiInputBase-root",
                    }
                  }
                  onChange={[Function]}
                  value="Seu nome aqui"
                >
                  <div
                    className="MuiInputBase-root"
                    onClick={[Function]}
                  >
                    <input
                      className="MuiInputBase-input"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="text"
                      value="Seu nome aqui"
                    />
                  </div>
                </ForwardRef(InputBase)>
              </WithStyles(ForwardRef(InputBase))>
              <WithStyles(ForwardRef(IconButton))
                aria-label="Search"
              >
                <ForwardRef(IconButton)
                  aria-label="Search"
                  classes={
                    Object {
                      "colorInherit": "MuiIconButton-colorInherit",
                      "colorPrimary": "MuiIconButton-colorPrimary",
                      "colorSecondary": "MuiIconButton-colorSecondary",
                      "disabled": "Mui-disabled",
                      "edgeEnd": "MuiIconButton-edgeEnd",
                      "edgeStart": "MuiIconButton-edgeStart",
                      "label": "MuiIconButton-label",
                      "root": "MuiIconButton-root",
                      "sizeSmall": "MuiIconButton-sizeSmall",
                    }
                  }
                >
                  <WithStyles(ForwardRef(ButtonBase))
                    aria-label="Search"
                    centerRipple={true}
                    className="MuiIconButton-root"
                    disabled={false}
                    focusRipple={true}
                  >
                    <ForwardRef(ButtonBase)
                      aria-label="Search"
                      centerRipple={true}
                      className="MuiIconButton-root"
                      classes={
                        Object {
                          "disabled": "Mui-disabled",
                          "focusVisible": "Mui-focusVisible",
                          "root": "MuiButtonBase-root",
                        }
                      }
                      disabled={false}
                      focusRipple={true}
                    >
                      <button
                        aria-label="Search"
                        className="MuiButtonBase-root MuiIconButton-root"
                        disabled={false}
                        onBlur={[Function]}
                        onDragLeave={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseDown={[Function]}
                        onMouseLeave={[Function]}
                        onMouseUp={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        <span
                          className="MuiIconButton-label"
                        >
                          <ForwardRef>
                            <WithStyles(ForwardRef(SvgIcon))>
                              <ForwardRef(SvgIcon)
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                    "colorError": "MuiSvgIcon-colorError",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                    "root": "MuiSvgIcon-root",
                                  }
                                }
                              >
                                <svg
                                  aria-hidden="true"
                                  className="MuiSvgIcon-root"
                                  focusable="false"
                                  role="presentation"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                  />
                                </svg>
                              </ForwardRef(SvgIcon)>
                            </WithStyles(ForwardRef(SvgIcon))>
                          </ForwardRef>
                        </span>
                        <NoSsr>
                          <WithStyles(TouchRipple)
                            center={true}
                          >
                            <TouchRipple
                              center={true}
                              classes={
                                Object {
                                  "child": "MuiTouchRipple-child",
                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                  "ripple": "MuiTouchRipple-ripple",
                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                  "root": "MuiTouchRipple-root",
                                }
                              }
                            >
                              <span
                                className="MuiTouchRipple-root"
                              >
                                <TransitionGroup
                                  childFactory={[Function]}
                                  component={null}
                                  enter={true}
                                  exit={true}
                                />
                              </span>
                            </TouchRipple>
                          </WithStyles(TouchRipple)>
                        </NoSsr>
                      </button>
                    </ForwardRef(ButtonBase)>
                  </WithStyles(ForwardRef(ButtonBase))>
                </ForwardRef(IconButton)>
              </WithStyles(ForwardRef(IconButton))>
            </div>
          </ForwardRef(Paper)>
        </WithStyles(ForwardRef(Paper))>
      </div>
    </Search>
  </Connect(Search)>
</Provider>
`;
